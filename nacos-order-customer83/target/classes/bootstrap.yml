#server:
#  port: 83

spring:
  profiles:
    active: dev
  application:
    name: nacos-order-customer
  boot: #spring-boot-admin 客户端配置
    admin:
      client:
        url: http://localhost:7000
  cloud:
    sentinel:   #sentinel yaml配置
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719
#      datasource:   #sentinel规则持久化到nacos， 比较鸡肋，需要自己在nacos上写nacos-order-customer-a.json文件
#        ds1:
#          nacos:
#            server-addr: 192.168.243.129:8848
#            dataId: nacos-order-customer-a
#            groupId: DEFAULT_GROUP
#            data-type: json
#            rule-type: flow
    nacos:
      discovery:
        server-addr: 192.168.243.129:8848 #nacos作为注册中心的地址，nacos配置在linux
      config:
        server-addr: 192.168.243.129:8848 #nacos作为配置中心的地址
        file-extension: yaml #指定配置文件为yaml格式
#        namespace: mxyid  #指定配置文件所在的命名空间
#        group: DEV_GROUP #指定Group为DEV_GROUP的配置文件

# 上面的nacos配置找到nacos中对应的配置文件 就是: 默认的public命名空间下, 并且group为DEFAULT_GROUP的 nacos-order-customer-dev.yaml文件 （DATA ID）

# nacos找对应配置文件的规则：${prefix}-${spring.profiles.active}.${file-extension}
# prefix 默认是spring.application.name, 也可以通过配置 spring.cloud.nacos.config.prefix来指定
# spring.profiles.active可以为空，为空前面的连接符"-"会自动去除
# file-extension 就是spring.cloud.nacos.config.file-extension


#service-url:
#  nacos-payment-service: http://nacos-payment-provider
logging:
  level:
    com.mxy.springcloud.order.feign: debug

feign:
  sentinel:
    enabled: true # 激活Sentinel对Feign的支持

management: # 配置客户端 Actuator 的监控（健康检查）, admin将展示:83服务状态。 注意 因为 :83服务依赖了sentinel， 如果sentinel没启动，这个服务状态就是down下线
            # http://127.0.0.1:83/actuator/health 查看以下监控内容的健康状态， 一旦某个状态为down，在admin7000服务中的整体表现就是down
  endpoints:
    web: # 监控web端是否正常
      exposure:
        include: '*'
  health: # 是否开启redis监控
    redis:
      enabled: false
  endpoint: # 展示健康状态细节
    health:
      show-details: always